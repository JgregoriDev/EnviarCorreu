/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Dades.PersonesDades;
import Model.ModelBaseDades;
import Model.ModelLlegirPDF;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.postgresql.util.PSQLException;

/**
 *
 * @author w10
 */
public class JFrame extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    private int n;
    private PanelRuta pr;
    private PanelBarraProgress pbg;
    private PanelAsumpte pa;
    private ArrayList<PersonesDades> llistaCoin;

    public JFrame() {
        initComponents();
        ImageIcon icono = new ImageIcon("src/resources/icono.png");
        setIconImage(icono.getImage());
        n = 0;
        setTitle("Programa d'enviar nomines");
        llistaCoin = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        B_cancelar = new javax.swing.JButton();
        B_seguent = new javax.swing.JButton();
        Panelbuit = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setIconImages(null);

        B_cancelar.setText("Cancelar");
        B_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_cancelarActionPerformed(evt);
            }
        });

        B_seguent.setText("Següent");
        B_seguent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_seguentActionPerformed(evt);
            }
        });
        B_seguent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                B_seguentKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(B_cancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(B_seguent)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_seguent)
                    .addComponent(B_cancelar))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout PanelbuitLayout = new javax.swing.GroupLayout(Panelbuit);
        Panelbuit.setLayout(PanelbuitLayout);
        PanelbuitLayout.setHorizontalGroup(
            PanelbuitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        PanelbuitLayout.setVerticalGroup(
            PanelbuitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );

        getContentPane().add(Panelbuit, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_seguentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_seguentActionPerformed
        // TODO add your handling code here:
        cambiarPanel();
    }//GEN-LAST:event_B_seguentActionPerformed
    public void cambiarPanel() {
        n++;
        System.out.println(
                "" + n);
        //Cambia de panel segons el número de click al panel
        switch (n) {
            case 1:
//                B_seguent.setEnabled(false);
                modificarTitol("1: Introdueix l'assumpte del missatge");
//              Li asignes el valor
                pa = new PanelAsumpte(B_seguent);
//              Borres el panel anterior
//                getContentPane().remove(Panelbuit);
//              Añadeixes el panel al frame
//                getContentPane().add(pa, java.awt.BorderLayout.CENTER);
//              Actualizes el frame per a que apareguen els nous elements en el FRAME
//                pack();
                carregarPanel(Panelbuit, pa);
                break;
            case 2:
                B_seguent.setEnabled(false);
//              Modifiques el titul
                modificarTitol("2: Ruta dels arxius PDF a passar");
                pr = new PanelRuta(B_seguent);
//              Lleva el panel
                carregarPanel(pa, pr);
                break;

            case 3:
//              Aconseguim el archiu
                File f = pr.getf().getParentFile();
//              Omplim la llista
                //llista de pdf en la carpeta
                ArrayList<File> llistaPDF = pr.getLlistaPDF();
                ModelBaseDades mbd = new ModelBaseDades();

                try {
                    //Carregar ArrayList
                    mbd.carregarLlistaDades();
                } catch (PSQLException ex) {
                    JOptionPane.showMessageDialog(null, "Conexio denega el usuari no te permisos per llegir la base de dades", "Error", JOptionPane.ERROR_MESSAGE);

                } catch (ClassNotFoundException ex) {
                    System.out.println("Error la llibreria de conexio no esta o be t'has equivocat ");
                    JOptionPane.showMessageDialog(null, "Driver no trobat", "Error", JOptionPane.ERROR_MESSAGE);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error en la ", "Error", JOptionPane.ERROR_MESSAGE);

                    System.out.println("Dades incorrectes");
                } catch (NullPointerException ex) {
                    JOptionPane.showMessageDialog(null, "La llista no ha pogut ser omplida ja que la base de dades no es troba oberta", "Error", JOptionPane.ERROR_MESSAGE);
                    
                }

                //Deposita en arraylist
                ArrayList<PersonesDades> llistaPersones = mbd.getLlistaPersones();
                if (!llistaPersones.isEmpty()) {
                    System.out.println("NIFFS");
//                llegint pdf's i aconseguint les rutes del arxiu pdf amb coincidencies
                    int coincidencies = 0;
                    for (int i = 0; i < llistaPDF.size(); i++) {
                        ModelLlegirPDF mlpdf = new ModelLlegirPDF(llistaPersones);
                        System.out.println("Archiu PDF " + llistaPDF.get(i).getName());
                        System.out.println("========================================");
                        mlpdf.LlegirPDF(llistaPDF.get(i));
                        System.out.println("========================================");
                        //Bucle per depositar ruta en el objecte on trobe la coincidencia amb el dni
                        for (int j = 0; j < llistaPersones.size(); j++) {
                            if (mlpdf.getNif().equals(llistaPersones.get(j).getDNI())) {
                                llistaPersones.get(j).setRuta(mlpdf.getFilePdf().getAbsolutePath());
                                llistaCoin.add(llistaPersones.get(j));
                                System.out.println("Dni" + llistaPersones.get(j).getNom() + "Ruta " + llistaPersones.get(j).getRuta());
                            } else {
//                                System.out.println("El dni no ha sigut identificadt " + j);
                                coincidencies++;
                            }
                        }

                    }
//             Bloqueje el boto fins que obtinga el valor màxim
                    if (coincidencies == llistaCoin.size()) {

                        System.out.println("No hi han coincidencies");
                        JOptionPane.showMessageDialog(null, "No s'han trobat coincidencies torna a executar el programa desde cero i selecciona un altra carpeta", "No hi han coincidencies ", JOptionPane.WARNING_MESSAGE);
                        B_seguent.setText("Finalizar");
                        System.exit(0);

                    } else {
                        B_seguent.setEnabled(false);
                        modificarTitol("3: Enviant Archius per correu electrónic");
                        pbg = new PanelBarraProgress(B_seguent,
                                llistaCoin,
                                pa.getAsumpteText().getText(),
                                pa.getMissatgeText().getText());
                        carregarPanel(pr, pbg);
                    }
                } else {
                    System.out.println("la llista no ha pogut ser carregada");

                }
                break;
            case 4:
                if (B_seguent.getText().equals("Finalitzar")) {
                    System.exit(0);
                }
                finalitzar();
                break;
            default:
                System.out.println("Opció: " + n);
                break;
        }
    }

    //Borra el anterior panel i carga el nou
    public void carregarPanel(JPanel panelBorrat, JPanel panelCarregat) {
        getContentPane().remove(panelBorrat);
        getContentPane().add(panelCarregat, java.awt.BorderLayout.CENTER);
        pack();
    }

    private void B_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_cancelarActionPerformed
        // TODO add your handling code here:
//        IX DEL PROGRAMA
        int resp = JOptionPane.showConfirmDialog(null, "Estàs segur de que vols eixir?", "Alterta!", JOptionPane.YES_NO_OPTION);
        if (resp == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_B_cancelarActionPerformed
    private void modificarTitol(String titol) {
        this.setTitle(titol);
    }
    private void B_seguentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B_seguentKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n') {
            cambiarPanel();
        }
    }//GEN-LAST:event_B_seguentKeyPressed
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("resources/icono.png"));

        return retValue;
    }

    public void finalitzar() {
        if (B_seguent.getText().equals("Finalitzar") && pbg.isFinalitzar() == true) {
            System.out.println("Eixint");
            System.exit(0);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_cancelar;
    private javax.swing.JButton B_seguent;
    private javax.swing.JPanel Panelbuit;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
